// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private WPI_TalonSRX right_Talon_1;
private WPI_VictorSPX right_Victor_2;
private SpeedControllerGroup speedControllerGroup2;
private WPI_TalonSRX left_Talon_3;
private WPI_VictorSPX left_Victor_4;
private SpeedControllerGroup speedControllerGroup1;
private DifferentialDrive differentialDrive1;
private Encoder right_Encoder_1;
private Encoder left_Encoder_2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
right_Talon_1 = new WPI_TalonSRX(1);


        
right_Victor_2 = new WPI_VictorSPX(2);


        
speedControllerGroup2 = new SpeedControllerGroup(right_Talon_1, right_Victor_2  );
addChild("Speed Controller Group 2",speedControllerGroup2);

        
left_Talon_3 = new WPI_TalonSRX(3);


        
left_Victor_4 = new WPI_VictorSPX(4);


        
speedControllerGroup1 = new SpeedControllerGroup(left_Talon_3, left_Victor_4  );
addChild("Speed Controller Group 1",speedControllerGroup1);

        
differentialDrive1 = new DifferentialDrive(speedControllerGroup1, speedControllerGroup2);
addChild("Differential Drive 1",differentialDrive1);
differentialDrive1.setSafetyEnabled(true);
differentialDrive1.setExpiration(0.1);
differentialDrive1.setMaxOutput(1.0);

        
right_Encoder_1 = new Encoder(0, 1, false, EncodingType.k4X);
addChild("Right_Encoder_1",right_Encoder_1);
right_Encoder_1.setDistancePerPulse(1.0);
right_Encoder_1.setPIDSourceType(PIDSourceType.kRate);
        
left_Encoder_2 = new Encoder(2, 3, false, EncodingType.k4X);
addChild("Left_Encoder_2",left_Encoder_2);
left_Encoder_2.setDistancePerPulse(1.0);
left_Encoder_2.setPIDSourceType(PIDSourceType.kRate);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

