// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.Constants;
import frc.robot.Robot;
import frc.robot.RobotContainer;
import frc.robot.subsystems.Hopper;

/**
 *
 */
public class HopperReverse extends CommandBase {
    final Hopper _hop;

    private WPI_VictorSPX hopperVictorTop;
    private WPI_VictorSPX hopperVictorBottom;

    public HopperReverse(Hopper hop) {
        _hop = hop;
        addRequirements(_hop);
        hopperVictorTop = RobotContainer.hopper.getHopperVictorBottom();
        hopperVictorBottom = RobotContainer.hopper.getHopperVictorTop();
    }

    // Called just before this Command runs the first time
    @Override
    public void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    public void execute() {
        hopperVictorTop.set(ControlMode.PercentOutput, Constants.HopperConstants.HOPPER_REVERSE_SPEED);
        hopperVictorBottom.set(ControlMode.PercentOutput, Constants.HopperConstants.HOPPER_REVERSE_SPEED);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    public boolean isFinished() {
        return false;
    }

    // // Called once after isFinished returns true
    // @Override
    // public void end() {
    // }

    // // Called when another command which requires one or more of the same
    // // subsystems is scheduled to run
    // @Override
    // public void interrupted() {
    // }
}
